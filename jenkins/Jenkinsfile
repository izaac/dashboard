#!groovy


def branch = "master"
if ("${env.branch}" != "null" && "${env.branch}" != "") {
  branch = "${env.branch}"
}

node {
  wrap([$class: 'AnsiColorBuildWrapper', 'colorMapName': 'XTerm', 'defaultFg': 2, 'defaultBg':1]) {
    withFolderProperties {
      paramsMap = []
      params.each {
        paramsMap << "$it.key=$it.value"
      }
      withEnv(paramsMap) {
        stage('Checkout') {
          deleteDir()
          checkout([
                    $class: 'GitSCM',
                    branches: [[name: "*/${branch}"]],
                    extensions: scm.extensions + [[$class: 'CleanCheckout']],
                    userRemoteConfigs: scm.userRemoteConfigs
                  ])
        }

        try {
          try {
            stage('Debug Stage') {
                sh "which ssh"
                sh "ls -al $HOME"
                sh "ls -al $HOME/.ssh"
            }
          } catch (err) {
              echo "Error: " + err
              currentBuild.result = 'FAILURE'
              error()
          }
             
        } catch(err) {
          echo "Error: " + err
        }
        }
      }
    }
  }  
}